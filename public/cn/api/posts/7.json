{"total":67,"pageSize":10,"pageCount":7,"data":[{"title":"数据库题目集锦","slug":null,"date":"2018-06-07T08:00:04.000Z","updated":"2018-06-07T08:00:04.000Z","comments":null,"path":"api/articles/draft/Database-topic-collection.json","excerpt":"在数据库的三级模式结构中，描述数据库中全体数据的全局逻辑结构和特征的是（）答案：.概念模式数据库系统的三级模式结构是指数据库系统是由模式、外模式和内模式三级构成的。 （1）模式 模式也称逻辑模式或概念模式，是数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图。 模式实际上是数据库数据在逻辑级上的视图。一个数据库只有一个模式。定义模式时不仅要定义数据的逻辑结构，而且要定义数据之间的联系，定义与数据有关的安全性、完整性要求。 （2）外模式 外模式也称用户模式，它是数据库用户能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图，是与某一应用有关的数据的逻辑表示。 外模式通常是模式的子集。一个数据库可以有多个外模式。应用程序都是和外模式打交道的。外模式是保证数据库安全性的一个有力措施。每个用户只能看见和访问所对应的外模式中的数据，数据库中的其余数据对他们是不可见的。 （3）内模式 内模式也称存储模式，一个数据库只有一个内模式。它是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式。例如，记录的存储方式是顺序结构存储还是B树结构存储；索引按什么方式组织；数","keywords":null,"cover":null,"content":null,"raw":null,"categories":null,"tags":null},{"title":"VMware 安装Tools 遇到的问题：VGAuthService 启动失败","slug":null,"date":"2018-04-13T07:50:42.000Z","updated":"2018-04-13T07:50:42.000Z","comments":null,"path":"api/articles/draft/VGAuthService.json","excerpt":"虚拟机里遇到这个问题特此记录一下虚拟机内部环境： Windows 7 问题描述：VGAuthservice 启动失败，请确保您有足够的权限启动系统服务Installing VMware tools fails with error:VGAuthService &amp; Common Agent failed解决方案 ：安装补丁 KB2999226就可以了其他系统建议安装VC运行库看看。","keywords":null,"cover":null,"content":null,"raw":null,"categories":null,"tags":null},{"title":"使用cmake-gui进行转换为Visual Studio  的sln工程文件&&glog在Windows下的使用","slug":null,"date":"2018-03-26T07:44:32.000Z","updated":"2018-03-26T07:44:32.000Z","comments":null,"path":"api/articles/draft/使用cmake-gui进行转换为Visual-Studio.json","excerpt":"1.首先将库git到本地https://github.com/google/glog2.使用cmake-gui进行转换为Visual Studio 的sln工程文件(如下图）（使用我转换好的也可以https://github.com/czqu/builds/tree/master/glogs 然后选择vs版本和CPU架构（如果之前编译错了，再进去可能不能进到这个界面，把输出目录删除即可）3.点击generate，即可完成。 4.如果出现如下错误，说明你缺少gflags库，编译方法和上面一样不再赘述https://github.com/gflags/gflags 123456Could not find a package configuration file provided by \"gflags\" (requested version 2.2.0) with any of the following names: gflagsConfig.cmake gflags-config.cmake 5.然后新建一个测试工程（debug库和release库不能混用，不同架构也不能），添加头文件","keywords":null,"cover":"/cn/posts/49708/20200513181042328.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"计算机网络题目集锦","slug":null,"date":"2018-02-04T07:56:25.000Z","updated":"2018-02-04T07:56:25.000Z","comments":null,"path":"api/articles/draft/cs-network-topic-key.json","excerpt":"音频的时延抖动可通过在发送方为每个块规定一个序号或时间戳，在接收方延迟播放音频块来消除。答案：正确 什么是抖动？ 在网络上连续传输的数据包即便使用相同的路径，也会有不同的延时。这是由于分组交换网络固有的两个关键原因造成的。第一，数据包被单独路由。第二，网络设备接收队列中的数据包，因此无法保证延时调度不变。 每个数据包之间的这种延时不一致称为抖动。 为了弥补抖动，在连接的接收端使用抖动缓冲区。抖动缓冲区收集并存储传入数据包，以便它可以确定如何以一致的间隔发送它们。 静态抖动缓冲—其在系统的硬件中实现，并且通常由制造商配置。 动态抖动缓冲—其在系统软件中实现，并由管理员进行配置。他们可对缓冲进行调整以适应网络变化。 播放延时 播放延时是数据包到达时和播放时间之间的延时。当抖动缓冲区存储传入数据包并等待以均匀间隔分配它们时，这会增加数据包到达时间与播放时间之间的时间，也被称为播放延时。这个延时是由抖动缓冲区引入的，因为它负责规定传入数据包何时分发。 目前,最流行的以太网组网的拓扑结构是 （星型结构 ）。 HDLC中，数据比特串0111101111110装帧发送出去的串为（0111101111","keywords":null,"cover":"/cn/posts/1279/20200328213407978.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"Windows下用gem install jekyll命令安装jekyll错误","slug":null,"date":"2018-01-13T07:52:44.000Z","updated":"2018-01-13T07:52:44.000Z","comments":null,"path":"api/articles/draft/Failed-to-build-gem-native-extension.json","excerpt":"Windows下用gem install jekyll命令安装jekyll错误的解决方案 ERROR: Failed to build gem native extension 错误如下：ruby版本也正常，安装的也是with devkit的版本 123456789101112131415Temporarily enhancing PATH for MSYS/MINGW... Building native extensions. This could take a while... ERROR: Error installing jekyll: ERROR: Failed to build gem native extension. current directory: C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/http_parser.rb-0.6.0/ext/ruby_http_parser C:/Ruby26-x64/bin/ruby.exe -I C:/Ruby26-x64/lib/ruby/2.6.0 -r ./siteconf202007","keywords":null,"cover":"/cn/posts/1223/20200725105324259.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"c++作业","slug":null,"date":"2017-11-01T01:45:16.000Z","updated":"2017-11-01T01:45:16.000Z","comments":null,"path":"api/articles/draft/cpp-homework.json","excerpt":"输入输出流与文件操作123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134#include&lt;iostream&gt;#include&lt;fstream&gt;#include&lt;cstdlib&gt;#include&lt;string&gt;using namespace std;//职工struct Person{&nbsp; &nbsp; int m_Id;&nbsp; &nbsp; string m_Name;&nbsp; &nbsp; i","keywords":null,"cover":null,"content":null,"raw":null,"categories":null,"tags":null},{"title":"Deepin开机遇见的 [Firmware Bug] initramfs问题","slug":null,"date":"2017-05-15T03:31:22.000Z","updated":"2017-05-15T03:31:22.000Z","comments":null,"path":"api/articles/draft/Deepip-initramfs-problem.json","excerpt":"[Firmware Bug]： TSC_DEADLINE disabled due to Errata; please update microcode to version: 0x25 (or later) 解决方法：首先输入exit 然后输入 1fsck -y /dev/sd ** 这里依据出现的提示输入，例如 1fsck -y /dev/sda 然后再输入exit进入系统 顺便可以更新一下 输入： 1sudo apt-get install intel-microcode 或者： 1sudo apt-get install amd64-ucode 功能说明：检查文件系统并尝试修复错误。 语 法：fsck [-aANPrRsTV][-t &lt;文件系统类型&gt;][文件系统…] 补充说明：当文件系统发生错误四化，可用fsck指令尝试加以修复。 注意：千万不能在运行的系统上面直接执行fsck，特别是RHEL6.0以下ext3的文件系统，否则100%损坏根文件系统，使用fsck -y /dev/sdb1 修复磁盘时，必须将sdb1分区umount掉 参 数： -a 自动修复文件系统","keywords":null,"cover":null,"content":null,"raw":null,"categories":null,"tags":null}]}