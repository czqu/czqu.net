{"total":67,"pageSize":10,"pageCount":7,"data":[{"title":"亲测：解决红米蓝牙耳机只有一边有声音的问题","slug":null,"date":"2020-01-03T02:00:00.000Z","updated":"2020-01-03T02:00:00.000Z","comments":null,"path":"api/articles/release/solve-the-problem-The-Redmi-Bluetooth.json","excerpt":"前言：之前耳机出问题一直在网上找答案，网上的答案有漏的地方，所以一直失败，所以把我的方案写下来记录一下。 1.手机上取消和耳机的配对 2.在开机状态将两只耳机长按5秒关机，关机后松开（关机的时候两只耳机灯都不亮，如果本身就是关机状态就不用） 3.长按两只耳机，闪白灯，继续按，然后出现一次红白灯闪，不要放手继续按住，直到再出现一次红白灯闪（这很重要）。这是清除配置信息、 手机上记得选择取消配对并关闭蓝牙。 4.先将右耳机开机再将左耳机开机。（一定要放到盒子里，在盒子里拿出来会自动开机，所以只用先把右耳机拿出来） 5.这时候右耳机快闪，当左耳机不闪的时候左右耳机就配对成功了。 6.进入手机蓝牙设置，这时候应该可以连接了","keywords":null,"cover":null,"content":null,"raw":null,"categories":null,"tags":null},{"title":"docker中安装mysql","slug":null,"date":"2019-11-18T13:37:52.000Z","updated":"2019-11-18T13:37:52.000Z","comments":null,"path":"api/articles/draft/docker-mysql-install.json","excerpt":"Docker 安装 MySQLMySQL 是世界上最受欢迎的开源数据库。凭借其可靠性、易用性和性能，MySQL 已成为 Web 应用程序的数据库优先选择。 1、查看可用的 MySQL 版本访问 MySQL 镜像库地址：https://hub.docker.com/_/mysql?tab=tags 。 可以通过 Sort by 查看其他版本的 MySQL，默认是最新版本 mysql:latest 。 你也可以在下拉列表中找到其他你想要的版本： 此外，我们还可以用 docker search mysql 命令来查看可用版本： 123456789101112$ docker search mysqlNAME DESCRIPTION STARS OFFICIAL AUTOMATEDmysql MySQL is a widely used, open-source relati... 2529 [OK] mysql/mysql-server Optimized MySQL Server Docker images. Crea... 161 [OK]centurylink/mysql Image ","keywords":null,"cover":"/cn/posts/15098/docker-mysql1.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"redis整合springboot","slug":null,"date":"2019-11-18T11:20:33.000Z","updated":"2019-11-18T11:20:33.000Z","comments":null,"path":"api/articles/draft/redis-springboot-start.json","excerpt":"Docker 安装 RedisRedis 是一个开源的使用 ANSI C 语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value 的 NoSQL 数据库，并提供多种语言的 API。 1、查看可用的 Redis 版本访问 Redis 镜像库地址： https://hub.docker.com/_/redis?tab=tags。 可以通过 Sort by 查看其他版本的 Redis，默认是最新版本 redis:latest。 你也可以在下拉列表中找到其他你想要的版本： 此外，我们还可以用 docker search redis 命令来查看可用版本： 1234567891011121314$ docker search redisNAME DESCRIPTION STARS OFFICIAL AUTOMATEDredis Redis is an open source ... 2321 [OK] sameersbn/redis 32 [OK]torusware/speedus-redis Always updated official ... 29 [OK]bitnami/re","keywords":null,"cover":"/cn/posts/9380/docker-redis1.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"ubuntu 18.04下搭建LAMP环境","slug":null,"date":"2019-10-03T02:00:00.000Z","updated":"2019-10-03T02:00:00.000Z","comments":null,"path":"api/articles/draft/2019-10-3-Start-LAMP.json","excerpt":"前言： Linux 操作系统在服务器领域具有广泛的应用。Web 服务是服务器领域中应用最广泛的服务，常见 Web 服务有 WAMP（Windows+Apache+MySQL+PHP）和 LAMP（Linux+Apache+MySQL+PHP）架构，其中 Apache 是全世界最流行的 Web 服务软件，此外，Web 服务软件 nginx，因其具有优秀的性能也受到越来越多的用户欢迎。本文中，演示在 Linux 环境下搭建支持 PHP 等网页的 Web 服务平台，即LAMP。Linux 环境下搭建 Web 服务器有三种方式，一是在安装操作系统时勾选相应服务组件；二是从网上下载或从 ISO 系统镜像包中拷贝安装包手动安装；三是在在连接网络的的情况下在线安装。本文以阿里云 Ubuntu 18.04 64 位操作系统为例安装LAMP，并用PHP实现简单的图片上传功能。 1.安装 Apache 服务器1apt update &amp;&amp; apt install apache2 安装完成后需要手动启动 apache 服务 测试 Apache，在浏览器输入服务器IP 地址，如下图所示，说明 A","keywords":null,"cover":"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDYvMDcvWmljTzIxYm9DSnd5RkhrLnBuZw?x-oss-process=image/format,png","content":null,"raw":null,"categories":null,"tags":null},{"title":"ubuntu 18.04下搭建LAMP环境","slug":null,"date":"2019-10-03T02:00:00.000Z","updated":"2019-10-03T02:00:00.000Z","comments":null,"path":"api/articles/release/2019-10-3-Start-LAMP.json","excerpt":"前言： Linux 操作系统在服务器领域具有广泛的应用。Web 服务是服务器领域中应用最广泛的服务，常见 Web 服务有 WAMP（Windows+Apache+MySQL+PHP）和 LAMP（Linux+Apache+MySQL+PHP）架构，其中 Apache 是全世界最流行的 Web 服务软件，此外，Web 服务软件 nginx，因其具有优秀的性能也受到越来越多的用户欢迎。本文中，演示在 Linux 环境下搭建支持 PHP 等网页的 Web 服务平台，即LAMP。Linux 环境下搭建 Web 服务器有三种方式，一是在安装操作系统时勾选相应服务组件；二是从网上下载或从 ISO 系统镜像包中拷贝安装包手动安装；三是在在连接网络的的情况下在线安装。本文以阿里云 Ubuntu 18.04 64 位操作系统为例安装LAMP，并用PHP实现简单的图片上传功能。 1.安装 Apache 服务器1apt update &amp;&amp; apt install apache2 安装完成后需要手动启动 apache 服务 测试 Apache，在浏览器输入服务器IP 地址，如下图所示，说明 A","keywords":null,"cover":"/cn/posts/42422/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDYvMDcvWmljTzIxYm9DSnd5RkhrLnBuZw.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"找工作智力题集锦","slug":null,"date":"2019-08-13T07:58:12.000Z","updated":"2019-08-13T07:58:12.000Z","comments":null,"path":"api/articles/draft/Intelligence-Questions-Collection.json","excerpt":"1 .0，1，2，3，⋯，499，500共501个数按升序排列，每次取奇数序位的数丢掉，然后取剩下的数的奇数序位的数丢掉，重复这个过程，那么最后剩下的数是多少？答案 ：255 简单例举下：0 1 2 3 4 5 6 7 8 9 10 11 第一次剩下的 1 3 5 7 9 11 规律： 2i-1 （ i为整数 1&lt;=i&lt;= n/2 （n表示给出序列的元素个数，例子中是12，而题目中是501）） 第二次剩下的 3 7 11 4i- 1 1&lt;=i&lt;= n/4 第3次剩下的 7 8i- 1 1&lt;=i&lt;= n/8 相信已经差不多了。每次剩下的元素为 2^x-1 满足条件的只有 255=2^8-1 .当然这是选择题可以直接选答案。 正确做法是： 最后剩下一个元素，那么进行了几次筛选过程呢？ i取值只能是1， 那么 501/（2^x）&lt;2 取x=8; 那么剩下的元素是2^8-1=255 仔细观察都是一的二进制数最后出列。 32!的计算结果，尾数总共有几个零？答案：7个2*5可以得到零，即转为求因子数。2因子远大于5，求5就行这里可以有公式：5！：5 / 5","keywords":null,"cover":"/cn/posts/44209/20200330202952584.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"操作系统题目集锦","slug":null,"date":"2019-04-13T08:01:32.000Z","updated":"2019-04-13T08:01:32.000Z","comments":null,"path":"api/articles/draft/Collection-of-os-topics.json","excerpt":"在硬件和环境相同的条件下，一个作业在（分页）存储管理系统中运行的时间最长。分页式存储管理可能将连续的指令放置在不同的页中，会发生换页中断，而分段、段页都是逻辑分配空间，段长可变，逻辑上相对连续的指令放在同一段中，不会像分页那样频繁换页操作。 设从磁盘将一块数据传送到缓冲区所用实际为80μs，将缓冲区中数据传送到用户区所用时间为40μs，CPU处理数据所用的时间为30μs。则处理该数据，采用单缓冲传送磁盘数据，系统所用总时间为（120μs）。","keywords":null,"cover":"/cn/posts/46653/20200328213029515.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"git合并丢失代码问题分析与解决(错误操作导致)","slug":null,"date":"2019-03-19T04:16:29.000Z","updated":"2019-03-19T04:16:29.000Z","comments":null,"path":"api/articles/draft/git-merge-problem.json","excerpt":"问题描述我们在主干dev和branch1分支上进行并行开发。当要把branch1功能的代码合并到dev上时，发现dev上开发的部分功能代码找不到了。 那么，是在branch1上，作了删除提交导致的吗？然而，查提交日志，并没有发现删代码的提交记录。 难道一个分支有一个功能，另一个分支没这个功能，git合并时就有可能把这块功能代码丢掉？跟功能添加时间顺序有关系？ 为了解决这个问题和相关的疑问，我们需要先了解下git合并的过程。 git-merge过程稍微了解点git基础的应该都知道，合并是用的git merge命令。它只有两种，一种是快速合并(fast-forward)，还有一种是三方合并(thirdparty merge)。 如上图所示，当两个分支有直系关系时，使用快速合并，git不产生新的commit结点，只是把head进行更新，如dev指向C4。 三方合并稍显复杂点，它会产生一个新的commit结点，并把head指向它。它会先去找这两个要合并分支的最近公有结点，如图中，C3 和 C5的最近公有父结点为C1。然后，git对 C1、C3和C5三个结点进行三方合并产生新结点C6。这里的三方","keywords":null,"cover":"/cn/posts/25541/972306-c0cbace0c872146b.png","content":null,"raw":null,"categories":null,"tags":null},{"title":"Visio2019一键安装激活","slug":null,"date":"2019-03-13T07:41:59.000Z","updated":"2019-03-13T07:41:59.000Z","comments":null,"path":"api/articles/draft/Visio2019-install.json","excerpt":"如何让即点即用的Office365和Visio2019共存？共存是不可能共存滴，但是有其他解决方法~ 此方法也可直接用于安装Visio2019 先下载Office部署工具，安装时选择解压路径，解压后有setup.exe和三个xml配置文件，因为我安装的Office365是64位的，所以修改对应64位的配置文件。 编辑configuration为以下内容，将语言设置为zh-cn123456789&lt;Configuration&gt; &lt;Add OfficeClientEdition=\"64\" Channel=\"Monthly\"&gt; &lt;Product ID=\"VisioPro2019Volume\"&gt; &lt;Language ID=\"zh-cn\" /&gt; &lt;/Product&gt; &lt;/Add&gt;&lt;/Configuration&gt; 在以上所在的目录下启动命令行，执行setup.exe /download configuration-Office365-x64.xml 下载过程比较慢。下载完成后会发现目录下多了Office目录，然后继续","keywords":null,"cover":"/cn/posts/30340/20191030130922809.jpg","content":null,"raw":null,"categories":null,"tags":null},{"title":"高精度除法","slug":null,"date":"2019-02-03T08:03:43.000Z","updated":"2019-02-03T08:03:43.000Z","comments":null,"path":"api/articles/draft/High-precision-division.json","excerpt":"输入正整数a，b，c，输出a/b的小数形式，精确到小数后c位。(提示：使用循环） 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394#include&lt;bits/stdc++.h&gt;using namespace std;#define MAX_LEN 100char ans[MAX_LEN+10];int main(){ memset(ans,0,sizeof(ans)); int a,b,c; int anslen; cin&gt;&gt;a&gt;&gt;b&gt;&gt;c; sprintf(ans,\"%d.\",a/b);//打印整数部分及小数点 ans[MAX_LEN+8]=anslen=strlen(ans); a%=b; for (int i=0; i&lt;c","keywords":null,"cover":null,"content":null,"raw":null,"categories":null,"tags":null}]}