{"title":"详解管理root用户权限的sudo服务程序","slug":"draft/Selectively-deploying-your-superpowers-on-Linux","date":"2020-11-13T07:24:49.000Z","updated":"2020-11-13T07:24:49.000Z","comments":true,"path":"api/articles/draft/Selectively-deploying-your-superpowers-on-Linux.json","excerpt":"sudo 命令允许特权用户以 root 用户身份运行全部或部分命令，但是理解其能做什么和不能做什么很有帮助。 在你想要使用超级权限临时运行一条命令时，sudo 命令非常方便，但是当它不能如你期望的工作时，你也会遇到一些麻烦。比如说你想在某些日志文件结尾添加一些重要的信息，你可能会尝试这样做： 12$ echo \"Important note\" &gt;&gt; /var/log/somelog-bash: /var/log/somelog: Permission denied 好吧，看起来你似乎需要一些额外的特权。一般来说，你不能使用你的用户账号向系统日志中写入东西。我们使用 sudo 再尝试一次吧。 123$ sudo !!sudo echo \"Important note\" &gt;&gt; /var/log/somelog-bash: /var/log/somelog: Permission denied 嗯，它还是没有啥反应。我们来试点不同的吧。 12$ sudo 'echo \"Important note\" &gt;&gt; /var/log/somelog'sudo: ec","covers":null,"content":"<blockquote>\n<p>sudo 命令允许特权用户以 root 用户身份运行全部或部分命令，但是理解其能做什么和不能做什么很有帮助。</p>\n</blockquote>\n<p>在你想要使用超级权限临时运行一条命令时，<code>sudo</code> 命令非常方便，但是当它不能如你期望的工作时，你也会遇到一些麻烦。比如说你想在某些日志文件结尾添加一些重要的信息，你可能会尝试这样做：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"Important note\"</span> &gt;&gt; /var/log/somelog</span><br><span class=\"line\">-bash: /var/log/somelog: Permission denied</span><br></pre></td></tr></tbody></table></figure>\n\n<p>好吧，看起来你似乎需要一些额外的特权。一般来说，你不能使用你的用户账号向系统日志中写入东西。我们使用 <code>sudo</code> 再尝试一次吧。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> !!</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">echo</span> <span class=\"string\">\"Important note\"</span> &gt;&gt; /var/log/somelog</span><br><span class=\"line\">-bash: /var/log/somelog: Permission denied</span><br></pre></td></tr></tbody></table></figure>\n\n<p>嗯，它还是没有啥反应。我们来试点不同的吧。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> <span class=\"string\">'echo \"Important note\" &gt;&gt; /var/log/somelog'</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span>: <span class=\"built_in\">echo</span> <span class=\"string\">\"Important note\"</span> &gt;&gt; /var/log/somelog: <span class=\"built_in\">command</span> not found</span><br></pre></td></tr></tbody></table></figure>\n\n<p>也可以查看：<a href=\"https://www.networkworld.com/article/3242170/linux/invaluable-tips-and-tricks-for-troubleshooting-linux.html\">在 Linux 下排查故障的宝贵提示和技巧</a>。</p>\n<h3 id=\"接下来该干什么？\"><a href=\"#接下来该干什么？\" class=\"headerlink\" title=\"接下来该干什么？\"></a>接下来该干什么？</h3><p>上面在执行完第一条命令后的回应显示，我们缺少向日志文件写入时必须的特权。第二次，我们使用 root 权限运行了第一次的命令，但是返回了一个“没有权限”的错误。第三次，我们把整个命令放在一个引号里面再运行了一遍，返回了一个“没有发现命令”的错误。所以，到底错在哪里了呢？</p>\n<ul>\n<li>第一条命令：没有 root 特权，你无法向这个日志中写入东西。</li>\n<li>第二条命令：你的超级权限没有延伸到重定向。</li>\n<li>第三条命令：<code>sudo</code> 不理解你用引号括起来的整个 “命令”。</li>\n</ul>\n<p>而且如果你的用户还未添加到 sudo 用户组的时候，如果尝试使用 <code>sudo</code>，你可能已经看到过像下面的这么一条错误了：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nemo is not in the sudoers file. This incident will be reported.</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"你可以做什么？\"><a href=\"#你可以做什么？\" class=\"headerlink\" title=\"你可以做什么？\"></a>你可以做什么？</h3><p>一个相当简单的选择就是使用 <code>sudo</code> 命令暂时成为 root。鉴于你已经有了 sudo 特权，你可以使用下面的命令执行此操作：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> su</span><br><span class=\"line\">[<span class=\"built_in\">sudo</span>] password <span class=\"keyword\">for</span> nemo:</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>注意这个改变的提示符表明了你的新身份。然后你就可以以 root 运行之前的命令了：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># echo \"Important note\" &gt;&gt; /var/log/somelog</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>接着你可以输入 <code>^d</code> 返回你之前的身份。当然了，一些 sudo 的配置可能会阻止你使用 <code>sudo</code> 命令成为 root。</p>\n<p>另一个切换用户为 root 的方法是仅用 <code>su</code> 命令，但是这需要你知道 root 密码。许多人被赋予了访问 sudo 的权限，而并不知道 root 密码，所以这并不是总是可行。</p>\n<p>（采用 su 直接）切换到 root 之后，你就可以以 root 的身份运行任何你想执行的命令了。这种方式的问题是：1) 每个想要使用 root 特权的人都需要事先知道 root 的密码（这样不很安全）；2) 如果在运行需要 root 权限的特定命令后未能退出特权状态，你的系统可能会受到一些重大错误的波及。<code>sudo</code> 命令旨在允许您仅在真正需要时使用 root 权限，并控制每个 sudo 用户应具有的 root 权限。它也可以使你在使用完 root 特权之后轻松地回到普通用户的状态。</p>\n<p>另外请注意，整个讨论的前提是你可以正常地访问 sudo，并且你的访问权限没有受限。详细的内容后面会介绍到。</p>\n<p>还有一个选择就是使用一个不同的命令。如果通过编辑文件从而在其后添加内容是一种选择的话，你也许可以使用 <code>sudo vi /var/log/somelog</code>，虽然编辑一个活跃的日志文件通常不是一个好主意，因为系统可能会频繁的向这个文件中进行写入操作。</p>\n<p>最后一个但是有点复杂的选择是，使用下列命令之一可以解决我们之前看到的问题，但是它们涉及到了很多复杂的语法。第一个命令允许你在得到 “没有权限” 的拒绝之后可以使用 <code>!!</code> 重复你的命令：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> <span class=\"built_in\">echo</span> <span class=\"string\">\"Important note\"</span> &gt;&gt; /var/log/somelog</span><br><span class=\"line\">-bash: /var/log/somelog: Permission denied</span><br><span class=\"line\">$ !!:gs/&gt;/|<span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> -a /    &lt;=====</span><br><span class=\"line\">$ <span class=\"built_in\">tail</span> -1 /var/log/somelog</span><br><span class=\"line\">Important note</span><br></pre></td></tr></tbody></table></figure>\n\n<p>第二种是通过 <code>sudo</code> 命令，把你想要添加的信息传递给 <code>tee</code>。注意，<code>-a</code> 指定了你要<strong>附加</strong>文本到目标文件：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo \"Important note\" | sudo tee -a /var/log/somelog</span><br><span class=\"line\">$ tail -1 /var/log/somelog</span><br><span class=\"line\">Important note</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"sudo-有多可控？\"><a href=\"#sudo-有多可控？\" class=\"headerlink\" title=\"sudo 有多可控？\"></a>sudo 有多可控？</h3><p>回答这个问题最快速的回答就是，它取决于管理它的人。大多数 Linux 的默认设置都非常简单。如果一个用户被安排到了一个特别的组中，例如 <code>wheel</code> 或者 <code>admin</code> 组，那这个用户无需知道 root 的密码就可以拥有运行任何命令的能力。这就是大多数 Linux 系统中的默认设置。一旦在 <code>/etc/group</code> 中添加了一个用户到了特权组中，这个用户就可以以 root 的权力运行任何命令。另一方面，可以配置 sudo，以便一些用户只能够以 root 身份运行单一指令或者一组命令中的任何一个。</p>\n<p>如果把像下面展示的这些行添加到了 <code>/etc/sudoers</code> 文件中，例如 “nemo” 这个用户可以以 root 身份运行 <code>whoami</code> 命令。在现实中，这可能不会造成任何影响，它非常适合作为一个例子。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># User alias specification</span><br><span class=\"line\">nemo ALL=(root) NOPASSWD: WHOAMI</span><br><span class=\"line\"># Cmnd alias specificationCmnd_Alias WHOAMI = /usr/bin/whoami</span><br></pre></td></tr></tbody></table></figure>\n\n<p>注意，我们添加了一个命令别名（<code>Cmnd_Alias</code>），它指定了一个可以运行的命令的全路径，以及一个用户别名，允许这个用户无需密码就可以使用 <code>sudo</code> 执行的单个命令。</p>\n<p>当 nemo 运行 <code>sudo whoami</code> 命令的时候，他将会看到这个：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo whoami</span><br><span class=\"line\">root</span><br></pre></td></tr></tbody></table></figure>\n\n<p>注意这个，因为 nemo 使用 <code>sudo</code> 执行了这条命令，<code>whoami</code> 会显示该命令运行时的用户是 <code>root</code>。</p>\n<p>至于其他的命令，nemo 将会看到像这样的一些内容：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo date</span><br><span class=\"line\">[sudo] password for nemo:</span><br><span class=\"line\">Sorry, user nemo is not allowed to execute '/bin/date' as root on butterfly.</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"sudo-的默认设置\"><a href=\"#sudo-的默认设置\" class=\"headerlink\" title=\"sudo 的默认设置\"></a>sudo 的默认设置</h3><p>在默认路径中，我们会利用像下面展示的 <code>/etc/sudoers</code> 文件中的几行：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo egrep \"admin|sudo\" /etc/sudoers</span><br><span class=\"line\"># Members of the admin group may gain root privileges</span><br><span class=\"line\">%admin ALL=(ALL) ALL        &lt;=====</span><br><span class=\"line\"># Allow members of group sudo to execute any command</span><br><span class=\"line\">%sudo ALL=(ALL:ALL) ALL     &lt;=====</span><br></pre></td></tr></tbody></table></figure>\n\n<p>在这几行中，<code>%admin</code> 和 <code>%sudo</code> 都说明了任何添加到这些组中的人都可以使用 <code>sudo</code> 命令以 root 的身份运行任何命令。</p>\n<p>下面列出的是 <code>/etc/group</code> 中的一行，它意味着每一个在该组中列出的成员，都拥有了 sudo 特权，而无需在 <code>/etc/sudoers</code> 中进行任何修改。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo:x:27:shs,nemo</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><code>sudo</code> 命令意味着你可以根据需要轻松地部署超级用户的访问权限，而且只有在需要的时候才能赋予用户非常有限的特权访问权限。你可能会遇到一些与简单的 <code>sudo command</code> 不同的问题，不过在 <code>sudo</code> 的回应中应该会显示你遇到了什么问题。</p>\n<hr>\n<p>来自<a href=\"https://linux.cn/article-10310-1.html\">https://linux.cn/article-10310-1.html</a></p>\n<p>via: <a href=\"https://www.networkworld.com/article/3322504/linux/selectively-deploying-your-superpowers-on-linux.html\">https://www.networkworld.com/article/3322504/linux/selectively-deploying-your-superpowers-on-linux.html</a></p>\n","more":"<blockquote>\n<p>sudo 命令允许特权用户以 root 用户身份运行全部或部分命令，但是理解其能做什么和不能做什么很有帮助。</p>\n</blockquote>\n<p>在你想要使用超级权限临时运行一条命令时，<code>sudo</code> 命令非常方便，但是当它不能如你期望的工作时，你也会遇到一些麻烦。比如说你想在某些日志文件结尾添加一些重要的信息，你可能会尝试这样做：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Important note&quot;</span> &gt;&gt; /var/log/somelog</span><br><span class=\"line\">-bash: /var/log/somelog: Permission denied</span><br></pre></td></tr></table></figure>\n\n<p>好吧，看起来你似乎需要一些额外的特权。一般来说，你不能使用你的用户账号向系统日志中写入东西。我们使用 <code>sudo</code> 再尝试一次吧。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> !!</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Important note&quot;</span> &gt;&gt; /var/log/somelog</span><br><span class=\"line\">-bash: /var/log/somelog: Permission denied</span><br></pre></td></tr></table></figure>\n\n<p>嗯，它还是没有啥反应。我们来试点不同的吧。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> <span class=\"string\">&#x27;echo &quot;Important note&quot; &gt;&gt; /var/log/somelog&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span>: <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Important note&quot;</span> &gt;&gt; /var/log/somelog: <span class=\"built_in\">command</span> not found</span><br></pre></td></tr></table></figure>\n\n<p>也可以查看：<a href=\"https://www.networkworld.com/article/3242170/linux/invaluable-tips-and-tricks-for-troubleshooting-linux.html\">在 Linux 下排查故障的宝贵提示和技巧</a>。</p>\n<h3 id=\"接下来该干什么？\"><a href=\"#接下来该干什么？\" class=\"headerlink\" title=\"接下来该干什么？\"></a>接下来该干什么？</h3><p>上面在执行完第一条命令后的回应显示，我们缺少向日志文件写入时必须的特权。第二次，我们使用 root 权限运行了第一次的命令，但是返回了一个“没有权限”的错误。第三次，我们把整个命令放在一个引号里面再运行了一遍，返回了一个“没有发现命令”的错误。所以，到底错在哪里了呢？</p>\n<ul>\n<li>第一条命令：没有 root 特权，你无法向这个日志中写入东西。</li>\n<li>第二条命令：你的超级权限没有延伸到重定向。</li>\n<li>第三条命令：<code>sudo</code> 不理解你用引号括起来的整个 “命令”。</li>\n</ul>\n<p>而且如果你的用户还未添加到 sudo 用户组的时候，如果尝试使用 <code>sudo</code>，你可能已经看到过像下面的这么一条错误了：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nemo is not in the sudoers file. This incident will be reported.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"你可以做什么？\"><a href=\"#你可以做什么？\" class=\"headerlink\" title=\"你可以做什么？\"></a>你可以做什么？</h3><p>一个相当简单的选择就是使用 <code>sudo</code> 命令暂时成为 root。鉴于你已经有了 sudo 特权，你可以使用下面的命令执行此操作：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> su</span><br><span class=\"line\">[<span class=\"built_in\">sudo</span>] password <span class=\"keyword\">for</span> nemo:</span><br><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n\n<p>注意这个改变的提示符表明了你的新身份。然后你就可以以 root 运行之前的命令了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># echo &quot;Important note&quot; &gt;&gt; /var/log/somelog</span></span><br></pre></td></tr></table></figure>\n\n<p>接着你可以输入 <code>^d</code> 返回你之前的身份。当然了，一些 sudo 的配置可能会阻止你使用 <code>sudo</code> 命令成为 root。</p>\n<p>另一个切换用户为 root 的方法是仅用 <code>su</code> 命令，但是这需要你知道 root 密码。许多人被赋予了访问 sudo 的权限，而并不知道 root 密码，所以这并不是总是可行。</p>\n<p>（采用 su 直接）切换到 root 之后，你就可以以 root 的身份运行任何你想执行的命令了。这种方式的问题是：1) 每个想要使用 root 特权的人都需要事先知道 root 的密码（这样不很安全）；2) 如果在运行需要 root 权限的特定命令后未能退出特权状态，你的系统可能会受到一些重大错误的波及。<code>sudo</code> 命令旨在允许您仅在真正需要时使用 root 权限，并控制每个 sudo 用户应具有的 root 权限。它也可以使你在使用完 root 特权之后轻松地回到普通用户的状态。</p>\n<p>另外请注意，整个讨论的前提是你可以正常地访问 sudo，并且你的访问权限没有受限。详细的内容后面会介绍到。</p>\n<p>还有一个选择就是使用一个不同的命令。如果通过编辑文件从而在其后添加内容是一种选择的话，你也许可以使用 <code>sudo vi /var/log/somelog</code>，虽然编辑一个活跃的日志文件通常不是一个好主意，因为系统可能会频繁的向这个文件中进行写入操作。</p>\n<p>最后一个但是有点复杂的选择是，使用下列命令之一可以解决我们之前看到的问题，但是它们涉及到了很多复杂的语法。第一个命令允许你在得到 “没有权限” 的拒绝之后可以使用 <code>!!</code> 重复你的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">sudo</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Important note&quot;</span> &gt;&gt; /var/log/somelog</span><br><span class=\"line\">-bash: /var/log/somelog: Permission denied</span><br><span class=\"line\">$ !!:gs/&gt;/|<span class=\"built_in\">sudo</span> <span class=\"built_in\">tee</span> -a /    &lt;=====</span><br><span class=\"line\">$ <span class=\"built_in\">tail</span> -1 /var/log/somelog</span><br><span class=\"line\">Important note</span><br></pre></td></tr></table></figure>\n\n<p>第二种是通过 <code>sudo</code> 命令，把你想要添加的信息传递给 <code>tee</code>。注意，<code>-a</code> 指定了你要<strong>附加</strong>文本到目标文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &quot;Important note&quot; | sudo tee -a /var/log/somelog</span><br><span class=\"line\">$ tail -1 /var/log/somelog</span><br><span class=\"line\">Important note</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sudo-有多可控？\"><a href=\"#sudo-有多可控？\" class=\"headerlink\" title=\"sudo 有多可控？\"></a>sudo 有多可控？</h3><p>回答这个问题最快速的回答就是，它取决于管理它的人。大多数 Linux 的默认设置都非常简单。如果一个用户被安排到了一个特别的组中，例如 <code>wheel</code> 或者 <code>admin</code> 组，那这个用户无需知道 root 的密码就可以拥有运行任何命令的能力。这就是大多数 Linux 系统中的默认设置。一旦在 <code>/etc/group</code> 中添加了一个用户到了特权组中，这个用户就可以以 root 的权力运行任何命令。另一方面，可以配置 sudo，以便一些用户只能够以 root 身份运行单一指令或者一组命令中的任何一个。</p>\n<p>如果把像下面展示的这些行添加到了 <code>/etc/sudoers</code> 文件中，例如 “nemo” 这个用户可以以 root 身份运行 <code>whoami</code> 命令。在现实中，这可能不会造成任何影响，它非常适合作为一个例子。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># User alias specification</span><br><span class=\"line\">nemo ALL=(root) NOPASSWD: WHOAMI</span><br><span class=\"line\"># Cmnd alias specificationCmnd_Alias WHOAMI = /usr/bin/whoami</span><br></pre></td></tr></table></figure>\n\n<p>注意，我们添加了一个命令别名（<code>Cmnd_Alias</code>），它指定了一个可以运行的命令的全路径，以及一个用户别名，允许这个用户无需密码就可以使用 <code>sudo</code> 执行的单个命令。</p>\n<p>当 nemo 运行 <code>sudo whoami</code> 命令的时候，他将会看到这个：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo whoami</span><br><span class=\"line\">root</span><br></pre></td></tr></table></figure>\n\n<p>注意这个，因为 nemo 使用 <code>sudo</code> 执行了这条命令，<code>whoami</code> 会显示该命令运行时的用户是 <code>root</code>。</p>\n<p>至于其他的命令，nemo 将会看到像这样的一些内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo date</span><br><span class=\"line\">[sudo] password for nemo:</span><br><span class=\"line\">Sorry, user nemo is not allowed to execute &#x27;/bin/date&#x27; as root on butterfly.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sudo-的默认设置\"><a href=\"#sudo-的默认设置\" class=\"headerlink\" title=\"sudo 的默认设置\"></a>sudo 的默认设置</h3><p>在默认路径中，我们会利用像下面展示的 <code>/etc/sudoers</code> 文件中的几行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo egrep &quot;admin|sudo&quot; /etc/sudoers</span><br><span class=\"line\"># Members of the admin group may gain root privileges</span><br><span class=\"line\">%admin ALL=(ALL) ALL        &lt;=====</span><br><span class=\"line\"># Allow members of group sudo to execute any command</span><br><span class=\"line\">%sudo ALL=(ALL:ALL) ALL     &lt;=====</span><br></pre></td></tr></table></figure>\n\n<p>在这几行中，<code>%admin</code> 和 <code>%sudo</code> 都说明了任何添加到这些组中的人都可以使用 <code>sudo</code> 命令以 root 的身份运行任何命令。</p>\n<p>下面列出的是 <code>/etc/group</code> 中的一行，它意味着每一个在该组中列出的成员，都拥有了 sudo 特权，而无需在 <code>/etc/sudoers</code> 中进行任何修改。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo:x:27:shs,nemo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><code>sudo</code> 命令意味着你可以根据需要轻松地部署超级用户的访问权限，而且只有在需要的时候才能赋予用户非常有限的特权访问权限。你可能会遇到一些与简单的 <code>sudo command</code> 不同的问题，不过在 <code>sudo</code> 的回应中应该会显示你遇到了什么问题。</p>\n<hr>\n<p>来自<a href=\"https://linux.cn/article-10310-1.html\">https://linux.cn/article-10310-1.html</a></p>\n<p>via: <a href=\"https://www.networkworld.com/article/3322504/linux/selectively-deploying-your-superpowers-on-linux.html\">https://www.networkworld.com/article/3322504/linux/selectively-deploying-your-superpowers-on-linux.html</a></p>\n","categories":[],"tags":[{"name":"Linux","path":"api/tags/Linux.json"}]}