{"title":"OpenSSL在Windows和Linux下的编译","slug":"draft/Compilation-of-OpenSSL-under-Windows-and-Linux","date":"2021-11-13T05:10:11.000Z","updated":"2021-11-13T05:10:11.000Z","comments":true,"path":"api/articles/draft/Compilation-of-OpenSSL-under-Windows-and-Linux.json","excerpt":"具体参见https://wiki.openssl.org/index.php/Compilation_and_Installation Windows下的编译第一步：下载ActivePerl （https://www.activestate.com/products/perl/） ，安装ActivePerl，默认安装路径在C:\\Perl64。打开命令提示符，定位到 C:\\Perl64\\eg 目录，执行 perl example.pl，若提示 Hello from ActivePerl! 则说明 Perl 安装成功。（注意： 这里只能下载64位系统安装的版本） 注：可能报错“Can’t locate Win32/Console.pm”这里可以下载我编译好的版本https://platform.activestate.com/DonaldXY/ActivePerl-5.26/distributions 或者直接在cmd执行以下代码 12powershell -Command \"&amp; $([scriptblock]::Create((New-Object Net.WebClient).","covers":null,"content":"<p>具体参见<a href=\"https://wiki.openssl.org/index.php/Compilation_and_Installation\">https://wiki.openssl.org/index.php/Compilation_and_Installation</a></p>\n<h2 id=\"Windows下的编译\"><a href=\"#Windows下的编译\" class=\"headerlink\" title=\"Windows下的编译\"></a>Windows下的编译</h2><p>第一步：下载ActivePerl （<a href=\"https://www.activestate.com/products/perl/\">https://www.activestate.com/products/perl/</a>） ，安装ActivePerl，默认安装路径在C:\\Perl64。打开命令提示符，定位到 C:\\Perl64\\eg 目录，执行 perl example.pl，若提示 Hello from ActivePerl! 则说明 Perl 安装成功。（注意： 这里只能下载64位系统安装的版本）</p>\n<p><del>注：可能报错“Can’t locate Win32/Console.pm”这里可以下载我编译好的版本<br><a href=\"https://platform.activestate.com/DonaldXY/ActivePerl-5.26/distributions\">https://platform.activestate.com/DonaldXY/ActivePerl-5.26/distributions</a></del></p>\n<p><del><strong>或者直接在cmd执行以下代码</strong></del></p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">powershell -Command \"&amp; $([scriptblock]::Create((New-Object Net.WebClient).DownloadString('https://platform.activestate.com/dl/cli/_pdli01/install-latest.ps1'))) -c'state activate --default DonaldXY/ActivePerl-5.26'\"</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n\n\n<p>第二步：下载并安装 nasm汇编器（<a href=\"http://www.nasm.us/%EF%BC%8C\">http://www.nasm.us/，</a> ），默认安装在C:\\Users\\lenovo\\AppData\\Local\\bin\\NASM，将此路径加入Path环境变量，这个可以下载32位或者64位都没所谓</p>\n<p>第三步 执行perl Configure VC-WIN32 –prefix=c:\\openssl\\win32，prefix参数指的是后面执行nmake install命令把OpenSSL安装到哪个目录。</p>\n<p>64位 编译 就改成VC-WIN64A 静态编译加no-shared</p>\n<p>如:perl Configure no-shared VC-WIN64A –prefix=c:\\openssl\\win32</p>\n<p>第四步：编译 (使用VS2019 的命令行，64位要使用64位的)</p>\n<p>nmake</p>\n<p>nmake test</p>\n<p>nmake install</p>\n<p><strong>重新编译需要执行清理</strong></p>\n<p>nmake clean</p>\n<p>很多博客编译OPENSSL 的方法在1.1.0以后的版本都不行，具体出现的问题是</p>\n<p>It looks like you don’t have either nmake.exe or dmake.exe on your PATH, so you will not be able to execute the commands from a Makefile. You can install dmake.exe with the Perl Package Manager by running: ppm install dmake</p>\n<p>下面才是老版本和新版本不同的编译办法</p>\n<p>都是打开VS自己的命令行，不要打开WINDOWS的命令行</p>\n<p>老版本（1.1.0以前的版本是）是</p>\n<p>执行ms\\do_nasm</p>\n<p>执行nmake -f ms\\ntdll.mak，此处大约需要几分钟，如果一切正常，会在out32dll目录下生成很多dll和exe文件。</p>\n<p>执行nmake -f ms\\ntdll.mak test，如果全部显示OK，说明编译正确。</p>\n<p>执行nmake -f ms\\ntdll.mak install，所有头文件和lib文件就都被拷贝到前面prefix指定的目录了。</p>\n<p>新版本（1.1.0以后的版本是）</p>\n<p>nmake</p>\n<p>nmake test</p>\n<p>nmake install</p>\n<h2 id=\"Linux下的编译\"><a href=\"#Linux下的编译\" class=\"headerlink\" title=\"Linux下的编译\"></a>Linux下的编译</h2><p>去官网下载源码，具体命令以1.1.1g为例</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.openssl.org/source/openssl-1.1.1g.tar</span><br><span class=\"line\">tar -xzf  openssl-1.1.1g.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> openssl-1.1.1g</span><br><span class=\"line\">./config --prefix=/usr/local/openssl</span><br><span class=\"line\">./config -t</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></tbody></table></figure>","more":"<p>具体参见<a href=\"https://wiki.openssl.org/index.php/Compilation_and_Installation\">https://wiki.openssl.org/index.php/Compilation_and_Installation</a></p>\n<h2 id=\"Windows下的编译\"><a href=\"#Windows下的编译\" class=\"headerlink\" title=\"Windows下的编译\"></a>Windows下的编译</h2><p>第一步：下载ActivePerl （<a href=\"https://www.activestate.com/products/perl/\">https://www.activestate.com/products/perl/</a>） ，安装ActivePerl，默认安装路径在C:\\Perl64。打开命令提示符，定位到 C:\\Perl64\\eg 目录，执行 perl example.pl，若提示 Hello from ActivePerl! 则说明 Perl 安装成功。（注意： 这里只能下载64位系统安装的版本）</p>\n<p><del>注：可能报错“Can’t locate Win32/Console.pm”这里可以下载我编译好的版本<br><a href=\"https://platform.activestate.com/DonaldXY/ActivePerl-5.26/distributions\">https://platform.activestate.com/DonaldXY/ActivePerl-5.26/distributions</a></del></p>\n<p><del><strong>或者直接在cmd执行以下代码</strong></del></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">powershell -Command &quot;&amp; $([scriptblock]::Create((New-Object Net.WebClient).DownloadString(&#x27;https://platform.activestate.com/dl/cli/_pdli01/install-latest.ps1&#x27;))) -c&#x27;state activate --default DonaldXY/ActivePerl-5.26&#x27;&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>第二步：下载并安装 nasm汇编器（<a href=\"http://www.nasm.us/%EF%BC%8C\">http://www.nasm.us/，</a> ），默认安装在C:\\Users\\lenovo\\AppData\\Local\\bin\\NASM，将此路径加入Path环境变量，这个可以下载32位或者64位都没所谓</p>\n<p>第三步 执行perl Configure VC-WIN32 –prefix=c:\\openssl\\win32，prefix参数指的是后面执行nmake install命令把OpenSSL安装到哪个目录。</p>\n<p>64位 编译 就改成VC-WIN64A 静态编译加no-shared</p>\n<p>如:perl Configure no-shared VC-WIN64A –prefix=c:\\openssl\\win32</p>\n<p>第四步：编译 (使用VS2019 的命令行，64位要使用64位的)</p>\n<p>nmake</p>\n<p>nmake test</p>\n<p>nmake install</p>\n<p><strong>重新编译需要执行清理</strong></p>\n<p>nmake clean</p>\n<p>很多博客编译OPENSSL 的方法在1.1.0以后的版本都不行，具体出现的问题是</p>\n<p>It looks like you don’t have either nmake.exe or dmake.exe on your PATH, so you will not be able to execute the commands from a Makefile. You can install dmake.exe with the Perl Package Manager by running: ppm install dmake</p>\n<p>下面才是老版本和新版本不同的编译办法</p>\n<p>都是打开VS自己的命令行，不要打开WINDOWS的命令行</p>\n<p>老版本（1.1.0以前的版本是）是</p>\n<p>执行ms\\do_nasm</p>\n<p>执行nmake -f ms\\ntdll.mak，此处大约需要几分钟，如果一切正常，会在out32dll目录下生成很多dll和exe文件。</p>\n<p>执行nmake -f ms\\ntdll.mak test，如果全部显示OK，说明编译正确。</p>\n<p>执行nmake -f ms\\ntdll.mak install，所有头文件和lib文件就都被拷贝到前面prefix指定的目录了。</p>\n<p>新版本（1.1.0以后的版本是）</p>\n<p>nmake</p>\n<p>nmake test</p>\n<p>nmake install</p>\n<h2 id=\"Linux下的编译\"><a href=\"#Linux下的编译\" class=\"headerlink\" title=\"Linux下的编译\"></a>Linux下的编译</h2><p>去官网下载源码，具体命令以1.1.1g为例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.openssl.org/source/openssl-1.1.1g.tar</span><br><span class=\"line\">tar -xzf  openssl-1.1.1g.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> openssl-1.1.1g</span><br><span class=\"line\">./config --prefix=/usr/local/openssl</span><br><span class=\"line\">./config -t</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>","categories":[],"tags":[{"name":"运维","path":"api/tags/运维.json"}]}